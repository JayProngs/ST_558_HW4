[
  {
    "objectID": "ST558_HW4.html",
    "href": "ST558_HW4.html",
    "title": "ST558_HW4",
    "section": "",
    "text": "# install.packages(\"tidyverse\")\nlibrary(tibble)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# install.packages(\"readr\")\nlibrary(readr)\n\n# install.packages(\"readxl\")\nlibrary(readxl)\n\n\n\n\nIf your working directory is ‘myfolder/homework/’, what relative path would you specify to get the file located at ‘myfolder/MyData.csv’?\n\n\nThe relative path to the file MyData.csv would be ‘../MyData.csv’.\n\n\nWhat are the major benefits of using R projects?\n\n\nR projects organize our work by automatically setting working directory and keeping all relevant files in single location. It also ensures reproducibility across system as it saves settings like library paths and environment variables in .Rproj files. Also as it can be integrated with version control system it gets easier to commit the files.\n\n\nWhat is git and what is github?\n\n\nGit is a version control system that helps track changes in code,which is useful for devs to traceback or collaborate. GitHub is an online platform that hosts Git repositories which makes developer easier to maintain updates and it also has some different project management tools.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\n\nPrinting: Tibbles print only the first 10 rows and the first few columns and hence it is easier to work with large datasets. Data frames print the entire datase.\n\n\n\n\nSubsetting: When you extract a single column from a tibble the output is also a tibble , while when we extract column from data frame it might return a vector.\n\n\n\nRewrite the following nested function call using BaseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\n\nas_tibble(iris) |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows\n\n\n\n\n\n\n\n\n\nReading the data from “glass.data” and assiginging the column names and display tibble\n\n\nglass_data &lt;- read.table(\"glass.data\", sep = \",\", header = FALSE)\n\ncolnames(glass_data) &lt;- c(\"ID\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type_of_glass\")\n\nglass_data &lt;- as_tibble(glass_data)\n\nglass_data\n\n# A tibble: 214 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;int&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\n\nOverwrite the Type_of_glass column variable values with meaningful strings and display updated tibble.\n\n\n# \nglass_data &lt;- glass_data %&gt;%\n  mutate(Type_of_glass = ifelse(Type_of_glass == 1, \"building_windows_float_processed\",\n                        ifelse(Type_of_glass == 2, \"building_windows_non_float_processed\",\n                        ifelse(Type_of_glass == 3, \"vehicle_windows_float_processed\",\n                        ifelse(Type_of_glass == 4, \"vehicle_windows_non_float_processed\",\n                        ifelse(Type_of_glass == 5, \"containers\",\n                        ifelse(Type_of_glass == 6, \"tableware\", \n                        ifelse(Type_of_glass == 7, \"headlamps\", NA))))))))\n\nglass_data\n\n# A tibble: 214 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass    \n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n# ℹ 204 more rows\n\n\n\nFiltering the glass data based on type of glass which is either ‘Tableware’ or ‘headlamps’ and displaying the tibble.\n\n\nfiltered_glass_data &lt;- glass_data %&gt;%\n  filter(Fe &lt; 0.2, Type_of_glass %in% c(\"tableware\", \"headlamps\"))\n\nfiltered_glass_data\n\n# A tibble: 38 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\n\n\n\n\nReading the data from “yeast.data” and assiginging the column names and display tibble\n\n\nyeast_data &lt;- read.table(\"yeast.data\", sep = \"\", header = FALSE)\n\ncolnames(yeast_data) &lt;- c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\", \"class\")\n\nyeast_data &lt;- as_tibble(yeast_data)\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\nRemoving seq_name and nuc column from tibble.\n\n\nyeast_cleaned &lt;- yeast_data %&gt;%\n  as_tibble() %&gt;%\n  select(-seq_name, -nuc)\n  \nyeast_cleaned\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n# ℹ 1,474 more rows\n\n\n\nI am using across() to summarize the mean and median of each column across the “class” group, also name of column will be “calculated function_column name”\n\n\nyeast_summary &lt;- yeast_cleaned %&gt;%\n  group_by(class) %&gt;%\n  summarise(\n    across(c(mcg, gvh, alm, mit, erl, pox, vac),\n           list(mean = mean, median = median),\n           .names = \"{.col}_{.fn}\")\n  )\n\nyeast_summary\n\n# A tibble: 10 × 15\n   class mcg_mean mcg_median gvh_mean gvh_median alm_mean alm_median mit_mean\n   &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 CYT      0.481       0.48    0.470      0.46     0.535      0.53     0.227\n 2 ERL      0.792       0.78    0.772      0.8      0.482      0.5      0.336\n 3 EXC      0.735       0.77    0.717      0.73     0.493      0.49     0.292\n 4 ME1      0.789       0.78    0.757      0.73     0.376      0.365    0.312\n 5 ME2      0.722       0.76    0.603      0.59     0.415      0.41     0.283\n 6 ME3      0.431       0.43    0.490      0.49     0.364      0.36     0.213\n 7 MIT      0.521       0.51    0.533      0.53     0.517      0.52     0.404\n 8 NUC      0.452       0.45    0.456      0.46     0.529      0.53     0.228\n 9 POX      0.521       0.48    0.508      0.505    0.506      0.51     0.248\n10 VAC      0.548       0.56    0.526      0.505    0.465      0.495    0.201\n# ℹ 7 more variables: mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;\n\n\n\n\n\n\n\nRead data from ’white-wine.xlsx’ using read_excel() function.\n\n\nwhite_wine &lt;- read_excel(\"white-wine.xlsx\", sheet = 1)\n\nwhite_wine &lt;- as_tibble(white_wine)\nprint(white_wine)\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nRead second sheet with option ‘sheet = 2’ to retrieve the column names.\n\n\nalt_column_names &lt;- read_excel(\"white-wine.xlsx\", sheet = 2)\n\ncolnames(white_wine) &lt;- alt_column_names[[1]]\n\nprint(white_wine)\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nAdd column ‘type’ for white wine to indicate type of wine.\n\n\nwhite_wine &lt;- white_wine %&gt;%\n  mutate(type = \"white\")\n\nprint(white_wine)\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nReading data from ‘red-wine.csv’ using read_csv2() which is for semicolon-delimited files and using column names from second sheet. Also some columns are ‘chr’ type hence I have used mutate() to change them to numeric ‘double’ format. Also adding ‘type’ as ‘red’ similar to white wine tibble above.\n\n\nred_wine &lt;- read_csv2(\"red-wine.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1599 Columns: 12\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (5): volatile acidity, citric acid, chlorides, density, sulphates\ndbl (2): total sulfur dioxide, quality\nnum (5): fixed acidity, residual sugar, free sulfur dioxide, pH, alcohol\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncolnames(red_wine) &lt;- alt_column_names[[1]]\n\nred_wine &lt;- red_wine %&gt;%\n  mutate(volatile_acidity = as.numeric(volatile_acidity),\n         citric_acid = as.numeric(citric_acid),\n         chlorides = as.numeric(chlorides),\n         density = as.numeric(density),\n         sulphates = as.numeric(sulphates))\n\nred_wine &lt;- red_wine %&gt;%\n  mutate(type = \"red\")\n\nprint(red_wine)\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            74             0.7         0                19     0.076\n 2            78             0.88        0                26     0.098\n 3            78             0.76        0.04             23     0.092\n 4           112             0.28        0.56             19     0.075\n 5            74             0.7         0                19     0.076\n 6            74             0.66        0                18     0.075\n 7            79             0.6         0.06             16     0.069\n 8            73             0.65        0                12     0.065\n 9            78             0.58        0.02              2     0.073\n10            75             0.5         0.36             61     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nCombine both the tibbles using bind_rows()\n\n\nwine &lt;- bind_rows(white_wine, red_wine)\n\nprint(wine)\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nFilter data using filter() with quality more than 6.5 and alc value less than 132.\n\n\nhigh_quality_wines &lt;- wine %&gt;%\n  filter(quality &gt; 6.5, alcohol &lt; 132)\n\nprint(high_quality_wines)\n\n# A tibble: 1,198 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            62             0.66        0.48            1.2     0.029\n 4            62             0.66        0.48            1.2     0.029\n 5            64             0.31        0.38            2.9     0.038\n 6            68             0.26        0.42            1.7     0.049\n 7            72             0.32        0.36            2       0.033\n 8            74             0.18        0.31            1.4     0.058\n 9            66             0.25        0.29            1.1     0.068\n10            62             0.16        0.33            1.1     0.057\n# ℹ 1,188 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nSorting the data based on quality descending with arrange().\n\n\nhigh_quality_wines &lt;- high_quality_wines %&gt;%\n  arrange(desc(quality))\n\nprint(high_quality_wines)\n\n# A tibble: 1,198 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            91             0.27        0.45           10.6     0.035\n 2            66             0.36        0.29            1.6     0.021\n 3            74             0.24        0.36            2       0.031\n 4            69             0.36        0.34            4.2     0.018\n 5            71             0.26        0.49            2.2     0.032\n 6            62             0.66        0.48            1.2     0.029\n 7            62             0.66        0.48            1.2     0.029\n 8            68             0.26        0.42            1.7     0.049\n 9            67             0.23        0.31            2.1     0.046\n10            67             0.23        0.31            2.1     0.046\n# ℹ 1,188 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nSelecting only the columns that contains acid, the alcohol variable, the type variable, and the quality variable\n\n\nselected_wines &lt;- high_quality_wines %&gt;%\n  select(contains(\"acid\"), alcohol, type, quality)\n\nprint(selected_wines)\n\n# A tibble: 1,198 × 6\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9\n 2            66             0.36        0.29     124 white       9\n 3            74             0.24        0.36     125 white       9\n 4            69             0.36        0.34     127 white       9\n 5            71             0.26        0.49     129 white       9\n 6            62             0.66        0.48     128 white       8\n 7            62             0.66        0.48     128 white       8\n 8            68             0.26        0.42     105 white       8\n 9            67             0.23        0.31     107 white       8\n10            67             0.23        0.31     107 white       8\n# ℹ 1,188 more rows\n\n\n\nAdding mean and standard deviation of alcohol for each quality grouping\n\n\nsum_wine &lt;- selected_wines %&gt;%\n  group_by(quality) %&gt;%\n  mutate(mean_alcohol = mean(alcohol),\n         sd_alcohol = sd(alcohol))\n\nprint(sum_wine)\n\n# A tibble: 1,198 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality mean_alcohol\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9         122.\n 2            66             0.36        0.29     124 white       9         122.\n 3            74             0.24        0.36     125 white       9         122.\n 4            69             0.36        0.34     127 white       9         122.\n 5            71             0.26        0.49     129 white       9         122.\n 6            62             0.66        0.48     128 white       8         102.\n 7            62             0.66        0.48     128 white       8         102.\n 8            68             0.26        0.42     105 white       8         102.\n 9            67             0.23        0.31     107 white       8         102.\n10            67             0.23        0.31     107 white       8         102.\n# ℹ 1,188 more rows\n# ℹ 1 more variable: sd_alcohol &lt;dbl&gt;"
  },
  {
    "objectID": "ST558_HW4.html#task-1-conceptual-questions",
    "href": "ST558_HW4.html#task-1-conceptual-questions",
    "title": "ST558_HW4",
    "section": "",
    "text": "If your working directory is ‘myfolder/homework/’, what relative path would you specify to get the file located at ‘myfolder/MyData.csv’?\n\n\nThe relative path to the file MyData.csv would be ‘../MyData.csv’.\n\n\nWhat are the major benefits of using R projects?\n\n\nR projects organize our work by automatically setting working directory and keeping all relevant files in single location. It also ensures reproducibility across system as it saves settings like library paths and environment variables in .Rproj files. Also as it can be integrated with version control system it gets easier to commit the files.\n\n\nWhat is git and what is github?\n\n\nGit is a version control system that helps track changes in code,which is useful for devs to traceback or collaborate. GitHub is an online platform that hosts Git repositories which makes developer easier to maintain updates and it also has some different project management tools.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\n\nPrinting: Tibbles print only the first 10 rows and the first few columns and hence it is easier to work with large datasets. Data frames print the entire datase.\n\n\n\n\nSubsetting: When you extract a single column from a tibble the output is also a tibble , while when we extract column from data frame it might return a vector.\n\n\n\nRewrite the following nested function call using BaseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\n\nas_tibble(iris) |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows"
  },
  {
    "objectID": "ST558_HW4.html#task-2-reading-delimited-data",
    "href": "ST558_HW4.html#task-2-reading-delimited-data",
    "title": "ST558_HW4",
    "section": "",
    "text": "Reading the data from “glass.data” and assiginging the column names and display tibble\n\n\nglass_data &lt;- read.table(\"glass.data\", sep = \",\", header = FALSE)\n\ncolnames(glass_data) &lt;- c(\"ID\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type_of_glass\")\n\nglass_data &lt;- as_tibble(glass_data)\n\nglass_data\n\n# A tibble: 214 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;int&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\n\nOverwrite the Type_of_glass column variable values with meaningful strings and display updated tibble.\n\n\n# \nglass_data &lt;- glass_data %&gt;%\n  mutate(Type_of_glass = ifelse(Type_of_glass == 1, \"building_windows_float_processed\",\n                        ifelse(Type_of_glass == 2, \"building_windows_non_float_processed\",\n                        ifelse(Type_of_glass == 3, \"vehicle_windows_float_processed\",\n                        ifelse(Type_of_glass == 4, \"vehicle_windows_non_float_processed\",\n                        ifelse(Type_of_glass == 5, \"containers\",\n                        ifelse(Type_of_glass == 6, \"tableware\", \n                        ifelse(Type_of_glass == 7, \"headlamps\", NA))))))))\n\nglass_data\n\n# A tibble: 214 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass    \n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n# ℹ 204 more rows\n\n\n\nFiltering the glass data based on type of glass which is either ‘Tableware’ or ‘headlamps’ and displaying the tibble.\n\n\nfiltered_glass_data &lt;- glass_data %&gt;%\n  filter(Fe &lt; 0.2, Type_of_glass %in% c(\"tableware\", \"headlamps\"))\n\nfiltered_glass_data\n\n# A tibble: 38 × 11\n      ID    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\n\n\n\n\nReading the data from “yeast.data” and assiginging the column names and display tibble\n\n\nyeast_data &lt;- read.table(\"yeast.data\", sep = \"\", header = FALSE)\n\ncolnames(yeast_data) &lt;- c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\", \"class\")\n\nyeast_data &lt;- as_tibble(yeast_data)\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\nRemoving seq_name and nuc column from tibble.\n\n\nyeast_cleaned &lt;- yeast_data %&gt;%\n  as_tibble() %&gt;%\n  select(-seq_name, -nuc)\n  \nyeast_cleaned\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n# ℹ 1,474 more rows\n\n\n\nI am using across() to summarize the mean and median of each column across the “class” group, also name of column will be “calculated function_column name”\n\n\nyeast_summary &lt;- yeast_cleaned %&gt;%\n  group_by(class) %&gt;%\n  summarise(\n    across(c(mcg, gvh, alm, mit, erl, pox, vac),\n           list(mean = mean, median = median),\n           .names = \"{.col}_{.fn}\")\n  )\n\nyeast_summary\n\n# A tibble: 10 × 15\n   class mcg_mean mcg_median gvh_mean gvh_median alm_mean alm_median mit_mean\n   &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 CYT      0.481       0.48    0.470      0.46     0.535      0.53     0.227\n 2 ERL      0.792       0.78    0.772      0.8      0.482      0.5      0.336\n 3 EXC      0.735       0.77    0.717      0.73     0.493      0.49     0.292\n 4 ME1      0.789       0.78    0.757      0.73     0.376      0.365    0.312\n 5 ME2      0.722       0.76    0.603      0.59     0.415      0.41     0.283\n 6 ME3      0.431       0.43    0.490      0.49     0.364      0.36     0.213\n 7 MIT      0.521       0.51    0.533      0.53     0.517      0.52     0.404\n 8 NUC      0.452       0.45    0.456      0.46     0.529      0.53     0.228\n 9 POX      0.521       0.48    0.508      0.505    0.506      0.51     0.248\n10 VAC      0.548       0.56    0.526      0.505    0.465      0.495    0.201\n# ℹ 7 more variables: mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;"
  },
  {
    "objectID": "ST558_HW4.html#task-3-combining-excel-and-delimited-data",
    "href": "ST558_HW4.html#task-3-combining-excel-and-delimited-data",
    "title": "ST558_HW4",
    "section": "",
    "text": "Read data from ’white-wine.xlsx’ using read_excel() function.\n\n\nwhite_wine &lt;- read_excel(\"white-wine.xlsx\", sheet = 1)\n\nwhite_wine &lt;- as_tibble(white_wine)\nprint(white_wine)\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nRead second sheet with option ‘sheet = 2’ to retrieve the column names.\n\n\nalt_column_names &lt;- read_excel(\"white-wine.xlsx\", sheet = 2)\n\ncolnames(white_wine) &lt;- alt_column_names[[1]]\n\nprint(white_wine)\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nAdd column ‘type’ for white wine to indicate type of wine.\n\n\nwhite_wine &lt;- white_wine %&gt;%\n  mutate(type = \"white\")\n\nprint(white_wine)\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nReading data from ‘red-wine.csv’ using read_csv2() which is for semicolon-delimited files and using column names from second sheet. Also some columns are ‘chr’ type hence I have used mutate() to change them to numeric ‘double’ format. Also adding ‘type’ as ‘red’ similar to white wine tibble above.\n\n\nred_wine &lt;- read_csv2(\"red-wine.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1599 Columns: 12\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (5): volatile acidity, citric acid, chlorides, density, sulphates\ndbl (2): total sulfur dioxide, quality\nnum (5): fixed acidity, residual sugar, free sulfur dioxide, pH, alcohol\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncolnames(red_wine) &lt;- alt_column_names[[1]]\n\nred_wine &lt;- red_wine %&gt;%\n  mutate(volatile_acidity = as.numeric(volatile_acidity),\n         citric_acid = as.numeric(citric_acid),\n         chlorides = as.numeric(chlorides),\n         density = as.numeric(density),\n         sulphates = as.numeric(sulphates))\n\nred_wine &lt;- red_wine %&gt;%\n  mutate(type = \"red\")\n\nprint(red_wine)\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            74             0.7         0                19     0.076\n 2            78             0.88        0                26     0.098\n 3            78             0.76        0.04             23     0.092\n 4           112             0.28        0.56             19     0.075\n 5            74             0.7         0                19     0.076\n 6            74             0.66        0                18     0.075\n 7            79             0.6         0.06             16     0.069\n 8            73             0.65        0                12     0.065\n 9            78             0.58        0.02              2     0.073\n10            75             0.5         0.36             61     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nCombine both the tibbles using bind_rows()\n\n\nwine &lt;- bind_rows(white_wine, red_wine)\n\nprint(wine)\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nFilter data using filter() with quality more than 6.5 and alc value less than 132.\n\n\nhigh_quality_wines &lt;- wine %&gt;%\n  filter(quality &gt; 6.5, alcohol &lt; 132)\n\nprint(high_quality_wines)\n\n# A tibble: 1,198 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            62             0.66        0.48            1.2     0.029\n 4            62             0.66        0.48            1.2     0.029\n 5            64             0.31        0.38            2.9     0.038\n 6            68             0.26        0.42            1.7     0.049\n 7            72             0.32        0.36            2       0.033\n 8            74             0.18        0.31            1.4     0.058\n 9            66             0.25        0.29            1.1     0.068\n10            62             0.16        0.33            1.1     0.057\n# ℹ 1,188 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nSorting the data based on quality descending with arrange().\n\n\nhigh_quality_wines &lt;- high_quality_wines %&gt;%\n  arrange(desc(quality))\n\nprint(high_quality_wines)\n\n# A tibble: 1,198 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            91             0.27        0.45           10.6     0.035\n 2            66             0.36        0.29            1.6     0.021\n 3            74             0.24        0.36            2       0.031\n 4            69             0.36        0.34            4.2     0.018\n 5            71             0.26        0.49            2.2     0.032\n 6            62             0.66        0.48            1.2     0.029\n 7            62             0.66        0.48            1.2     0.029\n 8            68             0.26        0.42            1.7     0.049\n 9            67             0.23        0.31            2.1     0.046\n10            67             0.23        0.31            2.1     0.046\n# ℹ 1,188 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nSelecting only the columns that contains acid, the alcohol variable, the type variable, and the quality variable\n\n\nselected_wines &lt;- high_quality_wines %&gt;%\n  select(contains(\"acid\"), alcohol, type, quality)\n\nprint(selected_wines)\n\n# A tibble: 1,198 × 6\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9\n 2            66             0.36        0.29     124 white       9\n 3            74             0.24        0.36     125 white       9\n 4            69             0.36        0.34     127 white       9\n 5            71             0.26        0.49     129 white       9\n 6            62             0.66        0.48     128 white       8\n 7            62             0.66        0.48     128 white       8\n 8            68             0.26        0.42     105 white       8\n 9            67             0.23        0.31     107 white       8\n10            67             0.23        0.31     107 white       8\n# ℹ 1,188 more rows\n\n\n\nAdding mean and standard deviation of alcohol for each quality grouping\n\n\nsum_wine &lt;- selected_wines %&gt;%\n  group_by(quality) %&gt;%\n  mutate(mean_alcohol = mean(alcohol),\n         sd_alcohol = sd(alcohol))\n\nprint(sum_wine)\n\n# A tibble: 1,198 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality mean_alcohol\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9         122.\n 2            66             0.36        0.29     124 white       9         122.\n 3            74             0.24        0.36     125 white       9         122.\n 4            69             0.36        0.34     127 white       9         122.\n 5            71             0.26        0.49     129 white       9         122.\n 6            62             0.66        0.48     128 white       8         102.\n 7            62             0.66        0.48     128 white       8         102.\n 8            68             0.26        0.42     105 white       8         102.\n 9            67             0.23        0.31     107 white       8         102.\n10            67             0.23        0.31     107 white       8         102.\n# ℹ 1,188 more rows\n# ℹ 1 more variable: sd_alcohol &lt;dbl&gt;"
  }
]